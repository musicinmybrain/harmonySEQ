# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = harmonySEQ$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_harmonySEQ_OBJECTS = harmonySEQ-main.$(OBJEXT) \
	harmonySEQ-MainWindow.$(OBJEXT) \
	harmonySEQ-MidiDriver.$(OBJEXT) harmonySEQ-Sequencer.$(OBJEXT) \
	harmonySEQ-messages.$(OBJEXT) harmonySEQ-Files.$(OBJEXT) \
	harmonySEQ-global.$(OBJEXT) harmonySEQ-Event.$(OBJEXT) \
	harmonySEQ-EventGUI.$(OBJEXT) harmonySEQ-Action.$(OBJEXT) \
	harmonySEQ-ActionGUI.$(OBJEXT) harmonySEQ-TreeModels.$(OBJEXT) \
	harmonySEQ-Chord.$(OBJEXT) harmonySEQ-ChordWidget.$(OBJEXT) \
	harmonySEQ-Configuration.$(OBJEXT) \
	harmonySEQ-SettingsWindow.$(OBJEXT) \
	harmonySEQ-seqHandle.$(OBJEXT) \
	harmonySEQ-SequencerWidget.$(OBJEXT) \
	harmonySEQ-EventsWidget.$(OBJEXT) harmonySEQ-OSC.$(OBJEXT) \
	harmonySEQ-Atom.$(OBJEXT) harmonySEQ-NoteAtom.$(OBJEXT) \
	harmonySEQ-ControllerAtom.$(OBJEXT) \
	harmonySEQ-AtomContainer.$(OBJEXT) \
	harmonySEQ-PatternWidget.$(OBJEXT) \
	harmonySEQ-NoteSequencer.$(OBJEXT) \
	harmonySEQ-ControlSequencer.$(OBJEXT) \
	harmonySEQ-DiodeMidiEvent.$(OBJEXT)
harmonySEQ_OBJECTS = $(am_harmonySEQ_OBJECTS)
am__DEPENDENCIES_1 =
@DISABLEOSC_FALSE@harmonySEQ_DEPENDENCIES = $(am__DEPENDENCIES_1)
@DISABLEOSC_TRUE@harmonySEQ_DEPENDENCIES = $(am__DEPENDENCIES_1)
harmonySEQ_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(harmonySEQ_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/harmonySEQ-Action.Po \
	./$(DEPDIR)/harmonySEQ-ActionGUI.Po \
	./$(DEPDIR)/harmonySEQ-Atom.Po \
	./$(DEPDIR)/harmonySEQ-AtomContainer.Po \
	./$(DEPDIR)/harmonySEQ-Chord.Po \
	./$(DEPDIR)/harmonySEQ-ChordWidget.Po \
	./$(DEPDIR)/harmonySEQ-Configuration.Po \
	./$(DEPDIR)/harmonySEQ-ControlSequencer.Po \
	./$(DEPDIR)/harmonySEQ-ControllerAtom.Po \
	./$(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po \
	./$(DEPDIR)/harmonySEQ-Event.Po \
	./$(DEPDIR)/harmonySEQ-EventGUI.Po \
	./$(DEPDIR)/harmonySEQ-EventsWidget.Po \
	./$(DEPDIR)/harmonySEQ-Files.Po \
	./$(DEPDIR)/harmonySEQ-MainWindow.Po \
	./$(DEPDIR)/harmonySEQ-MidiDriver.Po \
	./$(DEPDIR)/harmonySEQ-NoteAtom.Po \
	./$(DEPDIR)/harmonySEQ-NoteSequencer.Po \
	./$(DEPDIR)/harmonySEQ-OSC.Po \
	./$(DEPDIR)/harmonySEQ-PatternWidget.Po \
	./$(DEPDIR)/harmonySEQ-Sequencer.Po \
	./$(DEPDIR)/harmonySEQ-SequencerWidget.Po \
	./$(DEPDIR)/harmonySEQ-SettingsWindow.Po \
	./$(DEPDIR)/harmonySEQ-TreeModels.Po \
	./$(DEPDIR)/harmonySEQ-global.Po \
	./$(DEPDIR)/harmonySEQ-main.Po \
	./$(DEPDIR)/harmonySEQ-messages.Po \
	./$(DEPDIR)/harmonySEQ-seqHandle.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(harmonySEQ_SOURCES)
DIST_SOURCES = $(harmonySEQ_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = -DLOCALEDIR=\"$(localedir)\" @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTKMM_CFLAGS = @GTKMM_CFLAGS@
GTKMM_LIBS = @GTKMM_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UPDATE_MIME_DB = @UPDATE_MIME_DB@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = $(datadir)/locale
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -DLOCALEDIR=\"$(localedir)\"
@DISABLEOSC_FALSE@ADD_DEF = 
@DISABLEOSC_TRUE@ADD_DEF = -DDISABLE_OSC
harmonySEQ_SOURCES = main.cpp\
						MainWindow.cpp \
						MidiDriver.cpp \
						Sequencer.cpp \
						messages.cpp \
						Files.cpp \
						global.cpp \
						Event.cpp \
						EventGUI.cpp \
						Action.cpp \
						ActionGUI.cpp \
						TreeModels.cpp \
						Chord.cpp \
						ChordWidget.cpp \
						Configuration.cpp \
						SettingsWindow.cpp \
						seqHandle.cpp \
						SequencerWidget.cpp \
						EventsWidget.cpp \
						OSC.cpp \
						Atom.cpp \
						NoteAtom.cpp \
						ControllerAtom.cpp \
						AtomContainer.cpp \
						PatternWidget.cpp \
						NoteSequencer.cpp \
						ControlSequencer.cpp \
						DiodeMidiEvent.cpp \
						MainWindow.h MidiDriver.h Sequencer.h messages.h Files.h global.h Event.h EventGUI.h Action.h ActionGUI.h TreeModels.h Chord.h ChordWidget.h Configuration.h SettingsWindow.h seqHandle.h SequencerWidget.h EventsWidget.h OSC.h Atom.h NoteAtom.h ControllerAtom.h AtomContainer.h AtomContainer.h PatternWidget.h NoteSequencer.h ControlSequencer.h DiodeMidiEvent.h main.h\
						gettext.h

harmonySEQ_CPPFLAGS = $(GTKMM_CFLAGS) $(ADD_DEF) -Wall -O3
@DISABLEOSC_FALSE@harmonySEQ_LDADD = $(GTKMM_LIBS) -lgthread-2.0 -lasound -llo
@DISABLEOSC_TRUE@harmonySEQ_LDADD = $(GTKMM_LIBS) -lgthread-2.0 -lasound
harmonySEQ_LDFLAGS = -Wall -O3
ACLOCAL_AMFLAGS = -I m4
LDADD = $(LIBINTL)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

harmonySEQ$(EXEEXT): $(harmonySEQ_OBJECTS) $(harmonySEQ_DEPENDENCIES) $(EXTRA_harmonySEQ_DEPENDENCIES) 
	@rm -f harmonySEQ$(EXEEXT)
	$(AM_V_CXXLD)$(harmonySEQ_LINK) $(harmonySEQ_OBJECTS) $(harmonySEQ_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Action.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-ActionGUI.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Atom.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-AtomContainer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Chord.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-ChordWidget.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Configuration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-ControlSequencer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-ControllerAtom.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Event.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-EventGUI.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-EventsWidget.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Files.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-MainWindow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-MidiDriver.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-NoteAtom.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-NoteSequencer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-OSC.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-PatternWidget.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-Sequencer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-SequencerWidget.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-SettingsWindow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-TreeModels.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-global.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-messages.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/harmonySEQ-seqHandle.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

harmonySEQ-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-main.o -MD -MP -MF $(DEPDIR)/harmonySEQ-main.Tpo -c -o harmonySEQ-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-main.Tpo $(DEPDIR)/harmonySEQ-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='harmonySEQ-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

harmonySEQ-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-main.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-main.Tpo -c -o harmonySEQ-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-main.Tpo $(DEPDIR)/harmonySEQ-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='harmonySEQ-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

harmonySEQ-MainWindow.o: MainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-MainWindow.o -MD -MP -MF $(DEPDIR)/harmonySEQ-MainWindow.Tpo -c -o harmonySEQ-MainWindow.o `test -f 'MainWindow.cpp' || echo '$(srcdir)/'`MainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-MainWindow.Tpo $(DEPDIR)/harmonySEQ-MainWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MainWindow.cpp' object='harmonySEQ-MainWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-MainWindow.o `test -f 'MainWindow.cpp' || echo '$(srcdir)/'`MainWindow.cpp

harmonySEQ-MainWindow.obj: MainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-MainWindow.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-MainWindow.Tpo -c -o harmonySEQ-MainWindow.obj `if test -f 'MainWindow.cpp'; then $(CYGPATH_W) 'MainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/MainWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-MainWindow.Tpo $(DEPDIR)/harmonySEQ-MainWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MainWindow.cpp' object='harmonySEQ-MainWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-MainWindow.obj `if test -f 'MainWindow.cpp'; then $(CYGPATH_W) 'MainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/MainWindow.cpp'; fi`

harmonySEQ-MidiDriver.o: MidiDriver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-MidiDriver.o -MD -MP -MF $(DEPDIR)/harmonySEQ-MidiDriver.Tpo -c -o harmonySEQ-MidiDriver.o `test -f 'MidiDriver.cpp' || echo '$(srcdir)/'`MidiDriver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-MidiDriver.Tpo $(DEPDIR)/harmonySEQ-MidiDriver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MidiDriver.cpp' object='harmonySEQ-MidiDriver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-MidiDriver.o `test -f 'MidiDriver.cpp' || echo '$(srcdir)/'`MidiDriver.cpp

harmonySEQ-MidiDriver.obj: MidiDriver.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-MidiDriver.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-MidiDriver.Tpo -c -o harmonySEQ-MidiDriver.obj `if test -f 'MidiDriver.cpp'; then $(CYGPATH_W) 'MidiDriver.cpp'; else $(CYGPATH_W) '$(srcdir)/MidiDriver.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-MidiDriver.Tpo $(DEPDIR)/harmonySEQ-MidiDriver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MidiDriver.cpp' object='harmonySEQ-MidiDriver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-MidiDriver.obj `if test -f 'MidiDriver.cpp'; then $(CYGPATH_W) 'MidiDriver.cpp'; else $(CYGPATH_W) '$(srcdir)/MidiDriver.cpp'; fi`

harmonySEQ-Sequencer.o: Sequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Sequencer.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Sequencer.Tpo -c -o harmonySEQ-Sequencer.o `test -f 'Sequencer.cpp' || echo '$(srcdir)/'`Sequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Sequencer.Tpo $(DEPDIR)/harmonySEQ-Sequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sequencer.cpp' object='harmonySEQ-Sequencer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Sequencer.o `test -f 'Sequencer.cpp' || echo '$(srcdir)/'`Sequencer.cpp

harmonySEQ-Sequencer.obj: Sequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Sequencer.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Sequencer.Tpo -c -o harmonySEQ-Sequencer.obj `if test -f 'Sequencer.cpp'; then $(CYGPATH_W) 'Sequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequencer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Sequencer.Tpo $(DEPDIR)/harmonySEQ-Sequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sequencer.cpp' object='harmonySEQ-Sequencer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Sequencer.obj `if test -f 'Sequencer.cpp'; then $(CYGPATH_W) 'Sequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequencer.cpp'; fi`

harmonySEQ-messages.o: messages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-messages.o -MD -MP -MF $(DEPDIR)/harmonySEQ-messages.Tpo -c -o harmonySEQ-messages.o `test -f 'messages.cpp' || echo '$(srcdir)/'`messages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-messages.Tpo $(DEPDIR)/harmonySEQ-messages.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='messages.cpp' object='harmonySEQ-messages.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-messages.o `test -f 'messages.cpp' || echo '$(srcdir)/'`messages.cpp

harmonySEQ-messages.obj: messages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-messages.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-messages.Tpo -c -o harmonySEQ-messages.obj `if test -f 'messages.cpp'; then $(CYGPATH_W) 'messages.cpp'; else $(CYGPATH_W) '$(srcdir)/messages.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-messages.Tpo $(DEPDIR)/harmonySEQ-messages.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='messages.cpp' object='harmonySEQ-messages.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-messages.obj `if test -f 'messages.cpp'; then $(CYGPATH_W) 'messages.cpp'; else $(CYGPATH_W) '$(srcdir)/messages.cpp'; fi`

harmonySEQ-Files.o: Files.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Files.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Files.Tpo -c -o harmonySEQ-Files.o `test -f 'Files.cpp' || echo '$(srcdir)/'`Files.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Files.Tpo $(DEPDIR)/harmonySEQ-Files.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Files.cpp' object='harmonySEQ-Files.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Files.o `test -f 'Files.cpp' || echo '$(srcdir)/'`Files.cpp

harmonySEQ-Files.obj: Files.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Files.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Files.Tpo -c -o harmonySEQ-Files.obj `if test -f 'Files.cpp'; then $(CYGPATH_W) 'Files.cpp'; else $(CYGPATH_W) '$(srcdir)/Files.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Files.Tpo $(DEPDIR)/harmonySEQ-Files.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Files.cpp' object='harmonySEQ-Files.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Files.obj `if test -f 'Files.cpp'; then $(CYGPATH_W) 'Files.cpp'; else $(CYGPATH_W) '$(srcdir)/Files.cpp'; fi`

harmonySEQ-global.o: global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-global.o -MD -MP -MF $(DEPDIR)/harmonySEQ-global.Tpo -c -o harmonySEQ-global.o `test -f 'global.cpp' || echo '$(srcdir)/'`global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-global.Tpo $(DEPDIR)/harmonySEQ-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='global.cpp' object='harmonySEQ-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-global.o `test -f 'global.cpp' || echo '$(srcdir)/'`global.cpp

harmonySEQ-global.obj: global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-global.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-global.Tpo -c -o harmonySEQ-global.obj `if test -f 'global.cpp'; then $(CYGPATH_W) 'global.cpp'; else $(CYGPATH_W) '$(srcdir)/global.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-global.Tpo $(DEPDIR)/harmonySEQ-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='global.cpp' object='harmonySEQ-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-global.obj `if test -f 'global.cpp'; then $(CYGPATH_W) 'global.cpp'; else $(CYGPATH_W) '$(srcdir)/global.cpp'; fi`

harmonySEQ-Event.o: Event.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Event.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Event.Tpo -c -o harmonySEQ-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Event.Tpo $(DEPDIR)/harmonySEQ-Event.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Event.cpp' object='harmonySEQ-Event.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp

harmonySEQ-Event.obj: Event.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Event.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Event.Tpo -c -o harmonySEQ-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Event.Tpo $(DEPDIR)/harmonySEQ-Event.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Event.cpp' object='harmonySEQ-Event.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`

harmonySEQ-EventGUI.o: EventGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-EventGUI.o -MD -MP -MF $(DEPDIR)/harmonySEQ-EventGUI.Tpo -c -o harmonySEQ-EventGUI.o `test -f 'EventGUI.cpp' || echo '$(srcdir)/'`EventGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-EventGUI.Tpo $(DEPDIR)/harmonySEQ-EventGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EventGUI.cpp' object='harmonySEQ-EventGUI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-EventGUI.o `test -f 'EventGUI.cpp' || echo '$(srcdir)/'`EventGUI.cpp

harmonySEQ-EventGUI.obj: EventGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-EventGUI.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-EventGUI.Tpo -c -o harmonySEQ-EventGUI.obj `if test -f 'EventGUI.cpp'; then $(CYGPATH_W) 'EventGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/EventGUI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-EventGUI.Tpo $(DEPDIR)/harmonySEQ-EventGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EventGUI.cpp' object='harmonySEQ-EventGUI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-EventGUI.obj `if test -f 'EventGUI.cpp'; then $(CYGPATH_W) 'EventGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/EventGUI.cpp'; fi`

harmonySEQ-Action.o: Action.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Action.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Action.Tpo -c -o harmonySEQ-Action.o `test -f 'Action.cpp' || echo '$(srcdir)/'`Action.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Action.Tpo $(DEPDIR)/harmonySEQ-Action.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Action.cpp' object='harmonySEQ-Action.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Action.o `test -f 'Action.cpp' || echo '$(srcdir)/'`Action.cpp

harmonySEQ-Action.obj: Action.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Action.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Action.Tpo -c -o harmonySEQ-Action.obj `if test -f 'Action.cpp'; then $(CYGPATH_W) 'Action.cpp'; else $(CYGPATH_W) '$(srcdir)/Action.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Action.Tpo $(DEPDIR)/harmonySEQ-Action.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Action.cpp' object='harmonySEQ-Action.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Action.obj `if test -f 'Action.cpp'; then $(CYGPATH_W) 'Action.cpp'; else $(CYGPATH_W) '$(srcdir)/Action.cpp'; fi`

harmonySEQ-ActionGUI.o: ActionGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ActionGUI.o -MD -MP -MF $(DEPDIR)/harmonySEQ-ActionGUI.Tpo -c -o harmonySEQ-ActionGUI.o `test -f 'ActionGUI.cpp' || echo '$(srcdir)/'`ActionGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ActionGUI.Tpo $(DEPDIR)/harmonySEQ-ActionGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ActionGUI.cpp' object='harmonySEQ-ActionGUI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ActionGUI.o `test -f 'ActionGUI.cpp' || echo '$(srcdir)/'`ActionGUI.cpp

harmonySEQ-ActionGUI.obj: ActionGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ActionGUI.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-ActionGUI.Tpo -c -o harmonySEQ-ActionGUI.obj `if test -f 'ActionGUI.cpp'; then $(CYGPATH_W) 'ActionGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/ActionGUI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ActionGUI.Tpo $(DEPDIR)/harmonySEQ-ActionGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ActionGUI.cpp' object='harmonySEQ-ActionGUI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ActionGUI.obj `if test -f 'ActionGUI.cpp'; then $(CYGPATH_W) 'ActionGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/ActionGUI.cpp'; fi`

harmonySEQ-TreeModels.o: TreeModels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-TreeModels.o -MD -MP -MF $(DEPDIR)/harmonySEQ-TreeModels.Tpo -c -o harmonySEQ-TreeModels.o `test -f 'TreeModels.cpp' || echo '$(srcdir)/'`TreeModels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-TreeModels.Tpo $(DEPDIR)/harmonySEQ-TreeModels.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TreeModels.cpp' object='harmonySEQ-TreeModels.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-TreeModels.o `test -f 'TreeModels.cpp' || echo '$(srcdir)/'`TreeModels.cpp

harmonySEQ-TreeModels.obj: TreeModels.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-TreeModels.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-TreeModels.Tpo -c -o harmonySEQ-TreeModels.obj `if test -f 'TreeModels.cpp'; then $(CYGPATH_W) 'TreeModels.cpp'; else $(CYGPATH_W) '$(srcdir)/TreeModels.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-TreeModels.Tpo $(DEPDIR)/harmonySEQ-TreeModels.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TreeModels.cpp' object='harmonySEQ-TreeModels.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-TreeModels.obj `if test -f 'TreeModels.cpp'; then $(CYGPATH_W) 'TreeModels.cpp'; else $(CYGPATH_W) '$(srcdir)/TreeModels.cpp'; fi`

harmonySEQ-Chord.o: Chord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Chord.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Chord.Tpo -c -o harmonySEQ-Chord.o `test -f 'Chord.cpp' || echo '$(srcdir)/'`Chord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Chord.Tpo $(DEPDIR)/harmonySEQ-Chord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Chord.cpp' object='harmonySEQ-Chord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Chord.o `test -f 'Chord.cpp' || echo '$(srcdir)/'`Chord.cpp

harmonySEQ-Chord.obj: Chord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Chord.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Chord.Tpo -c -o harmonySEQ-Chord.obj `if test -f 'Chord.cpp'; then $(CYGPATH_W) 'Chord.cpp'; else $(CYGPATH_W) '$(srcdir)/Chord.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Chord.Tpo $(DEPDIR)/harmonySEQ-Chord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Chord.cpp' object='harmonySEQ-Chord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Chord.obj `if test -f 'Chord.cpp'; then $(CYGPATH_W) 'Chord.cpp'; else $(CYGPATH_W) '$(srcdir)/Chord.cpp'; fi`

harmonySEQ-ChordWidget.o: ChordWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ChordWidget.o -MD -MP -MF $(DEPDIR)/harmonySEQ-ChordWidget.Tpo -c -o harmonySEQ-ChordWidget.o `test -f 'ChordWidget.cpp' || echo '$(srcdir)/'`ChordWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ChordWidget.Tpo $(DEPDIR)/harmonySEQ-ChordWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ChordWidget.cpp' object='harmonySEQ-ChordWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ChordWidget.o `test -f 'ChordWidget.cpp' || echo '$(srcdir)/'`ChordWidget.cpp

harmonySEQ-ChordWidget.obj: ChordWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ChordWidget.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-ChordWidget.Tpo -c -o harmonySEQ-ChordWidget.obj `if test -f 'ChordWidget.cpp'; then $(CYGPATH_W) 'ChordWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/ChordWidget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ChordWidget.Tpo $(DEPDIR)/harmonySEQ-ChordWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ChordWidget.cpp' object='harmonySEQ-ChordWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ChordWidget.obj `if test -f 'ChordWidget.cpp'; then $(CYGPATH_W) 'ChordWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/ChordWidget.cpp'; fi`

harmonySEQ-Configuration.o: Configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Configuration.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Configuration.Tpo -c -o harmonySEQ-Configuration.o `test -f 'Configuration.cpp' || echo '$(srcdir)/'`Configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Configuration.Tpo $(DEPDIR)/harmonySEQ-Configuration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Configuration.cpp' object='harmonySEQ-Configuration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Configuration.o `test -f 'Configuration.cpp' || echo '$(srcdir)/'`Configuration.cpp

harmonySEQ-Configuration.obj: Configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Configuration.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Configuration.Tpo -c -o harmonySEQ-Configuration.obj `if test -f 'Configuration.cpp'; then $(CYGPATH_W) 'Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/Configuration.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Configuration.Tpo $(DEPDIR)/harmonySEQ-Configuration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Configuration.cpp' object='harmonySEQ-Configuration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Configuration.obj `if test -f 'Configuration.cpp'; then $(CYGPATH_W) 'Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/Configuration.cpp'; fi`

harmonySEQ-SettingsWindow.o: SettingsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-SettingsWindow.o -MD -MP -MF $(DEPDIR)/harmonySEQ-SettingsWindow.Tpo -c -o harmonySEQ-SettingsWindow.o `test -f 'SettingsWindow.cpp' || echo '$(srcdir)/'`SettingsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-SettingsWindow.Tpo $(DEPDIR)/harmonySEQ-SettingsWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SettingsWindow.cpp' object='harmonySEQ-SettingsWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-SettingsWindow.o `test -f 'SettingsWindow.cpp' || echo '$(srcdir)/'`SettingsWindow.cpp

harmonySEQ-SettingsWindow.obj: SettingsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-SettingsWindow.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-SettingsWindow.Tpo -c -o harmonySEQ-SettingsWindow.obj `if test -f 'SettingsWindow.cpp'; then $(CYGPATH_W) 'SettingsWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/SettingsWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-SettingsWindow.Tpo $(DEPDIR)/harmonySEQ-SettingsWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SettingsWindow.cpp' object='harmonySEQ-SettingsWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-SettingsWindow.obj `if test -f 'SettingsWindow.cpp'; then $(CYGPATH_W) 'SettingsWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/SettingsWindow.cpp'; fi`

harmonySEQ-seqHandle.o: seqHandle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-seqHandle.o -MD -MP -MF $(DEPDIR)/harmonySEQ-seqHandle.Tpo -c -o harmonySEQ-seqHandle.o `test -f 'seqHandle.cpp' || echo '$(srcdir)/'`seqHandle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-seqHandle.Tpo $(DEPDIR)/harmonySEQ-seqHandle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='seqHandle.cpp' object='harmonySEQ-seqHandle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-seqHandle.o `test -f 'seqHandle.cpp' || echo '$(srcdir)/'`seqHandle.cpp

harmonySEQ-seqHandle.obj: seqHandle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-seqHandle.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-seqHandle.Tpo -c -o harmonySEQ-seqHandle.obj `if test -f 'seqHandle.cpp'; then $(CYGPATH_W) 'seqHandle.cpp'; else $(CYGPATH_W) '$(srcdir)/seqHandle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-seqHandle.Tpo $(DEPDIR)/harmonySEQ-seqHandle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='seqHandle.cpp' object='harmonySEQ-seqHandle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-seqHandle.obj `if test -f 'seqHandle.cpp'; then $(CYGPATH_W) 'seqHandle.cpp'; else $(CYGPATH_W) '$(srcdir)/seqHandle.cpp'; fi`

harmonySEQ-SequencerWidget.o: SequencerWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-SequencerWidget.o -MD -MP -MF $(DEPDIR)/harmonySEQ-SequencerWidget.Tpo -c -o harmonySEQ-SequencerWidget.o `test -f 'SequencerWidget.cpp' || echo '$(srcdir)/'`SequencerWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-SequencerWidget.Tpo $(DEPDIR)/harmonySEQ-SequencerWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SequencerWidget.cpp' object='harmonySEQ-SequencerWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-SequencerWidget.o `test -f 'SequencerWidget.cpp' || echo '$(srcdir)/'`SequencerWidget.cpp

harmonySEQ-SequencerWidget.obj: SequencerWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-SequencerWidget.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-SequencerWidget.Tpo -c -o harmonySEQ-SequencerWidget.obj `if test -f 'SequencerWidget.cpp'; then $(CYGPATH_W) 'SequencerWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/SequencerWidget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-SequencerWidget.Tpo $(DEPDIR)/harmonySEQ-SequencerWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SequencerWidget.cpp' object='harmonySEQ-SequencerWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-SequencerWidget.obj `if test -f 'SequencerWidget.cpp'; then $(CYGPATH_W) 'SequencerWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/SequencerWidget.cpp'; fi`

harmonySEQ-EventsWidget.o: EventsWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-EventsWidget.o -MD -MP -MF $(DEPDIR)/harmonySEQ-EventsWidget.Tpo -c -o harmonySEQ-EventsWidget.o `test -f 'EventsWidget.cpp' || echo '$(srcdir)/'`EventsWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-EventsWidget.Tpo $(DEPDIR)/harmonySEQ-EventsWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EventsWidget.cpp' object='harmonySEQ-EventsWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-EventsWidget.o `test -f 'EventsWidget.cpp' || echo '$(srcdir)/'`EventsWidget.cpp

harmonySEQ-EventsWidget.obj: EventsWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-EventsWidget.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-EventsWidget.Tpo -c -o harmonySEQ-EventsWidget.obj `if test -f 'EventsWidget.cpp'; then $(CYGPATH_W) 'EventsWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/EventsWidget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-EventsWidget.Tpo $(DEPDIR)/harmonySEQ-EventsWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EventsWidget.cpp' object='harmonySEQ-EventsWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-EventsWidget.obj `if test -f 'EventsWidget.cpp'; then $(CYGPATH_W) 'EventsWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/EventsWidget.cpp'; fi`

harmonySEQ-OSC.o: OSC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-OSC.o -MD -MP -MF $(DEPDIR)/harmonySEQ-OSC.Tpo -c -o harmonySEQ-OSC.o `test -f 'OSC.cpp' || echo '$(srcdir)/'`OSC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-OSC.Tpo $(DEPDIR)/harmonySEQ-OSC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OSC.cpp' object='harmonySEQ-OSC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-OSC.o `test -f 'OSC.cpp' || echo '$(srcdir)/'`OSC.cpp

harmonySEQ-OSC.obj: OSC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-OSC.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-OSC.Tpo -c -o harmonySEQ-OSC.obj `if test -f 'OSC.cpp'; then $(CYGPATH_W) 'OSC.cpp'; else $(CYGPATH_W) '$(srcdir)/OSC.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-OSC.Tpo $(DEPDIR)/harmonySEQ-OSC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OSC.cpp' object='harmonySEQ-OSC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-OSC.obj `if test -f 'OSC.cpp'; then $(CYGPATH_W) 'OSC.cpp'; else $(CYGPATH_W) '$(srcdir)/OSC.cpp'; fi`

harmonySEQ-Atom.o: Atom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Atom.o -MD -MP -MF $(DEPDIR)/harmonySEQ-Atom.Tpo -c -o harmonySEQ-Atom.o `test -f 'Atom.cpp' || echo '$(srcdir)/'`Atom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Atom.Tpo $(DEPDIR)/harmonySEQ-Atom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Atom.cpp' object='harmonySEQ-Atom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Atom.o `test -f 'Atom.cpp' || echo '$(srcdir)/'`Atom.cpp

harmonySEQ-Atom.obj: Atom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-Atom.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-Atom.Tpo -c -o harmonySEQ-Atom.obj `if test -f 'Atom.cpp'; then $(CYGPATH_W) 'Atom.cpp'; else $(CYGPATH_W) '$(srcdir)/Atom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-Atom.Tpo $(DEPDIR)/harmonySEQ-Atom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Atom.cpp' object='harmonySEQ-Atom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-Atom.obj `if test -f 'Atom.cpp'; then $(CYGPATH_W) 'Atom.cpp'; else $(CYGPATH_W) '$(srcdir)/Atom.cpp'; fi`

harmonySEQ-NoteAtom.o: NoteAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-NoteAtom.o -MD -MP -MF $(DEPDIR)/harmonySEQ-NoteAtom.Tpo -c -o harmonySEQ-NoteAtom.o `test -f 'NoteAtom.cpp' || echo '$(srcdir)/'`NoteAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-NoteAtom.Tpo $(DEPDIR)/harmonySEQ-NoteAtom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteAtom.cpp' object='harmonySEQ-NoteAtom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-NoteAtom.o `test -f 'NoteAtom.cpp' || echo '$(srcdir)/'`NoteAtom.cpp

harmonySEQ-NoteAtom.obj: NoteAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-NoteAtom.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-NoteAtom.Tpo -c -o harmonySEQ-NoteAtom.obj `if test -f 'NoteAtom.cpp'; then $(CYGPATH_W) 'NoteAtom.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteAtom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-NoteAtom.Tpo $(DEPDIR)/harmonySEQ-NoteAtom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteAtom.cpp' object='harmonySEQ-NoteAtom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-NoteAtom.obj `if test -f 'NoteAtom.cpp'; then $(CYGPATH_W) 'NoteAtom.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteAtom.cpp'; fi`

harmonySEQ-ControllerAtom.o: ControllerAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ControllerAtom.o -MD -MP -MF $(DEPDIR)/harmonySEQ-ControllerAtom.Tpo -c -o harmonySEQ-ControllerAtom.o `test -f 'ControllerAtom.cpp' || echo '$(srcdir)/'`ControllerAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ControllerAtom.Tpo $(DEPDIR)/harmonySEQ-ControllerAtom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerAtom.cpp' object='harmonySEQ-ControllerAtom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ControllerAtom.o `test -f 'ControllerAtom.cpp' || echo '$(srcdir)/'`ControllerAtom.cpp

harmonySEQ-ControllerAtom.obj: ControllerAtom.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ControllerAtom.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-ControllerAtom.Tpo -c -o harmonySEQ-ControllerAtom.obj `if test -f 'ControllerAtom.cpp'; then $(CYGPATH_W) 'ControllerAtom.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerAtom.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ControllerAtom.Tpo $(DEPDIR)/harmonySEQ-ControllerAtom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerAtom.cpp' object='harmonySEQ-ControllerAtom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ControllerAtom.obj `if test -f 'ControllerAtom.cpp'; then $(CYGPATH_W) 'ControllerAtom.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerAtom.cpp'; fi`

harmonySEQ-AtomContainer.o: AtomContainer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-AtomContainer.o -MD -MP -MF $(DEPDIR)/harmonySEQ-AtomContainer.Tpo -c -o harmonySEQ-AtomContainer.o `test -f 'AtomContainer.cpp' || echo '$(srcdir)/'`AtomContainer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-AtomContainer.Tpo $(DEPDIR)/harmonySEQ-AtomContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AtomContainer.cpp' object='harmonySEQ-AtomContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-AtomContainer.o `test -f 'AtomContainer.cpp' || echo '$(srcdir)/'`AtomContainer.cpp

harmonySEQ-AtomContainer.obj: AtomContainer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-AtomContainer.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-AtomContainer.Tpo -c -o harmonySEQ-AtomContainer.obj `if test -f 'AtomContainer.cpp'; then $(CYGPATH_W) 'AtomContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/AtomContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-AtomContainer.Tpo $(DEPDIR)/harmonySEQ-AtomContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AtomContainer.cpp' object='harmonySEQ-AtomContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-AtomContainer.obj `if test -f 'AtomContainer.cpp'; then $(CYGPATH_W) 'AtomContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/AtomContainer.cpp'; fi`

harmonySEQ-PatternWidget.o: PatternWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-PatternWidget.o -MD -MP -MF $(DEPDIR)/harmonySEQ-PatternWidget.Tpo -c -o harmonySEQ-PatternWidget.o `test -f 'PatternWidget.cpp' || echo '$(srcdir)/'`PatternWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-PatternWidget.Tpo $(DEPDIR)/harmonySEQ-PatternWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PatternWidget.cpp' object='harmonySEQ-PatternWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-PatternWidget.o `test -f 'PatternWidget.cpp' || echo '$(srcdir)/'`PatternWidget.cpp

harmonySEQ-PatternWidget.obj: PatternWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-PatternWidget.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-PatternWidget.Tpo -c -o harmonySEQ-PatternWidget.obj `if test -f 'PatternWidget.cpp'; then $(CYGPATH_W) 'PatternWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/PatternWidget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-PatternWidget.Tpo $(DEPDIR)/harmonySEQ-PatternWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PatternWidget.cpp' object='harmonySEQ-PatternWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-PatternWidget.obj `if test -f 'PatternWidget.cpp'; then $(CYGPATH_W) 'PatternWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/PatternWidget.cpp'; fi`

harmonySEQ-NoteSequencer.o: NoteSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-NoteSequencer.o -MD -MP -MF $(DEPDIR)/harmonySEQ-NoteSequencer.Tpo -c -o harmonySEQ-NoteSequencer.o `test -f 'NoteSequencer.cpp' || echo '$(srcdir)/'`NoteSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-NoteSequencer.Tpo $(DEPDIR)/harmonySEQ-NoteSequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteSequencer.cpp' object='harmonySEQ-NoteSequencer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-NoteSequencer.o `test -f 'NoteSequencer.cpp' || echo '$(srcdir)/'`NoteSequencer.cpp

harmonySEQ-NoteSequencer.obj: NoteSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-NoteSequencer.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-NoteSequencer.Tpo -c -o harmonySEQ-NoteSequencer.obj `if test -f 'NoteSequencer.cpp'; then $(CYGPATH_W) 'NoteSequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteSequencer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-NoteSequencer.Tpo $(DEPDIR)/harmonySEQ-NoteSequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteSequencer.cpp' object='harmonySEQ-NoteSequencer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-NoteSequencer.obj `if test -f 'NoteSequencer.cpp'; then $(CYGPATH_W) 'NoteSequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteSequencer.cpp'; fi`

harmonySEQ-ControlSequencer.o: ControlSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ControlSequencer.o -MD -MP -MF $(DEPDIR)/harmonySEQ-ControlSequencer.Tpo -c -o harmonySEQ-ControlSequencer.o `test -f 'ControlSequencer.cpp' || echo '$(srcdir)/'`ControlSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ControlSequencer.Tpo $(DEPDIR)/harmonySEQ-ControlSequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControlSequencer.cpp' object='harmonySEQ-ControlSequencer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ControlSequencer.o `test -f 'ControlSequencer.cpp' || echo '$(srcdir)/'`ControlSequencer.cpp

harmonySEQ-ControlSequencer.obj: ControlSequencer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-ControlSequencer.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-ControlSequencer.Tpo -c -o harmonySEQ-ControlSequencer.obj `if test -f 'ControlSequencer.cpp'; then $(CYGPATH_W) 'ControlSequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/ControlSequencer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-ControlSequencer.Tpo $(DEPDIR)/harmonySEQ-ControlSequencer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControlSequencer.cpp' object='harmonySEQ-ControlSequencer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-ControlSequencer.obj `if test -f 'ControlSequencer.cpp'; then $(CYGPATH_W) 'ControlSequencer.cpp'; else $(CYGPATH_W) '$(srcdir)/ControlSequencer.cpp'; fi`

harmonySEQ-DiodeMidiEvent.o: DiodeMidiEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-DiodeMidiEvent.o -MD -MP -MF $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Tpo -c -o harmonySEQ-DiodeMidiEvent.o `test -f 'DiodeMidiEvent.cpp' || echo '$(srcdir)/'`DiodeMidiEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Tpo $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiodeMidiEvent.cpp' object='harmonySEQ-DiodeMidiEvent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-DiodeMidiEvent.o `test -f 'DiodeMidiEvent.cpp' || echo '$(srcdir)/'`DiodeMidiEvent.cpp

harmonySEQ-DiodeMidiEvent.obj: DiodeMidiEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harmonySEQ-DiodeMidiEvent.obj -MD -MP -MF $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Tpo -c -o harmonySEQ-DiodeMidiEvent.obj `if test -f 'DiodeMidiEvent.cpp'; then $(CYGPATH_W) 'DiodeMidiEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/DiodeMidiEvent.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Tpo $(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiodeMidiEvent.cpp' object='harmonySEQ-DiodeMidiEvent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(harmonySEQ_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harmonySEQ-DiodeMidiEvent.obj `if test -f 'DiodeMidiEvent.cpp'; then $(CYGPATH_W) 'DiodeMidiEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/DiodeMidiEvent.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/harmonySEQ-Action.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ActionGUI.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Atom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-AtomContainer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Chord.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ChordWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Configuration.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ControlSequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ControllerAtom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Event.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-EventGUI.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-EventsWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Files.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-MainWindow.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-MidiDriver.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-NoteAtom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-NoteSequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-OSC.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-PatternWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Sequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-SequencerWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-SettingsWindow.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-TreeModels.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-global.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-main.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-messages.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-seqHandle.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/harmonySEQ-Action.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ActionGUI.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Atom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-AtomContainer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Chord.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ChordWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Configuration.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ControlSequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-ControllerAtom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-DiodeMidiEvent.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Event.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-EventGUI.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-EventsWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Files.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-MainWindow.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-MidiDriver.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-NoteAtom.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-NoteSequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-OSC.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-PatternWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-Sequencer.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-SequencerWidget.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-SettingsWindow.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-TreeModels.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-global.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-main.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-messages.Po
	-rm -f ./$(DEPDIR)/harmonySEQ-seqHandle.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
